{
  "version": 3,
  "sources": ["empty-module:../utils/auth.server", "../../../app/routes/signup.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\signup.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\signup.tsx\");\n  import.meta.hot.lastModified = \"1730499506571.7322\";\n}\n// REMIX HMR END\n\n/* eslint-disable prefer-const */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useState } from \"react\";\nimport { FormField } from \"~/components/form-field\";\nimport { Layout } from \"~/components/layout\";\nimport { Register } from \"../utils/auth.server\";\n// export const action: ActionFunction = async ({ request }) => {\n//   const form = await request.formData()\n//   const action = form.get('_action')\n//   const email = form.get('email')\n//   const password = form.get('password')\n//   let firstName = form.get('firstName')\n//   let lastName = form.get('lastName')\n\n//   if (typeof action !== 'string' || typeof email !== 'string' || typeof password !== 'string') {\n//     console.log(\"Invalid Form Data\")\n//     return json({ error: `Invalid Form Data`, form: action }, { status: 400 })\n//   }\n\n//   if (action === 'register' && (typeof firstName !== 'string' || typeof lastName !== 'string')) {\n//     console.log(\"Invalid Form Data 2\")\n//     return json({ error: `Invalid Form Data`, form: action }, { status: 400 })\n//   } \n\n//   console.log(\"before error\")\n//   const errors = {\n//     email: validateEmail(email),\n//     password: validatePassword(password),\n//     ...(action === 'register'\n//       ? {\n//           firstName: validateName((firstName as string) || ''),\n//           lastName: validateName((lastName as string) || ''),\n//         }\n//       : {}),\n//   }\n\n//   console.log(\"after error\")\n\n//   if (Object.values(errors).some(Boolean))\n//     return json({ errors, fields: { email, password, firstName, lastName }, form: action }, { status: 400 })\n\n//   console.log(\"before return \")\n//   firstName = firstName as string\n//   lastName = lastName as string\n//   return await register({ email, password, firstName, lastName })\n// }\n\nexport default function SignUp() {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  // Updates the form data when an input changes\n  const handleInputChange = (event, field) => {\n    setFormData(form => ({\n      ...form,\n      [field]: event.target.value\n    }));\n  };\n  const RegisterUser = async e => {\n    e.preventDefault();\n    try {\n      console.log(formData);\n      await Register(formData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return <Layout>\r\n        <div className=\"h-full justify-center items-center flex flex-col gap-y-4\">\r\n        <h2 className=\"text-5xl font-extrabold text-yellow-300\">Welcome to Kudos!</h2>\r\n        <p className=\"font-semibold text-slate-300\">Register In To Give Some Praise!</p>\r\n\r\n        <form onSubmit={RegisterUser} className=\"rounded-2xl bg-gray-200 p-6 w-96\">\r\n          <FormField htmlFor=\"email\" label=\"Email\" value={formData.email} onChange={e => handleInputChange(e, 'email')} />\r\n          <FormField htmlFor=\"password\" type=\"password\" label=\"Password\" value={formData.password} onChange={e => handleInputChange(e, 'password')} />\r\n         <FormField htmlFor=\"firstName\" // change 'firstname' to 'firstName'\n        label=\"First Name\" value={formData.firstName} onChange={e => handleInputChange(e, 'firstName')} />\r\n          <FormField htmlFor=\"lastName\" // change 'lastname' to 'lastName'\n        label=\"Last Name\" value={formData.lastName} onChange={e => handleInputChange(e, 'lastName')} />\r\n          <div className=\"w-full text-center\">\r\n            <input type=\"submit\" className=\"rounded-xl mt-2 bg-yellow-300 px-3 py-2 text-blue-600 font-semibold transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\" value=\"Sign Up\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n      </Layout>;\n}\n_s(SignUp, \"LzCYUm8m7AB3dpJvEAchFkRqJ3c=\");\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
