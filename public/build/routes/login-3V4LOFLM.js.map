{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\login.tsx\");\n  import.meta.hot.lastModified = \"1730493929974.776\";\n}\n// REMIX HMR END\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useState } from \"react\";\nimport { FormField } from \"~/components/form-field\";\nimport { Layout } from \"~/components/layout\";\nexport default function Login() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  // Updates the form data when an input changes\n  const handleInputChange = (event, field) => {\n    setFormData(form => ({\n      ...form,\n      [field]: event.target.value\n    }));\n  };\n  return <Layout>\r\n        <div className=\"h-full justify-center items-center flex flex-col gap-y-4\">\r\n        <h2 className=\"text-5xl font-extrabold text-yellow-300\">Welcome to Kudos!</h2>\r\n        <p className=\"font-semibold text-slate-300\">Log In To Give Some Praise!</p>\r\n\r\n        <form method=\"POST\" className=\"rounded-2xl bg-gray-200 p-6 w-96\">\r\n          <FormField htmlFor=\"email\" label=\"Email\" value={formData.email} onChange={e => handleInputChange(e, 'email')} />\r\n          <FormField htmlFor=\"password\" type=\"password\" label=\"Password\" value={formData.password} onChange={e => handleInputChange(e, 'password')} />\r\n          <div className=\"w-full text-center\">\r\n            <input type=\"submit\" className=\"rounded-xl mt-2 bg-yellow-300 px-3 py-2 text-blue-600 font-semibold transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\" value=\"Sign In\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n      </Layout>;\n}\n_s(Login, \"A8I2ijA/WSTtvAQbbyFzvgwBWLg=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAsBA,mBAAyB;AAmBjB;AAxCR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAOe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM,CAAC,UAAU,WAAW,QAAI,uBAAS;AAAA,IACvC,OAAO;AAAA,IACP,UAAU;AAAA,EACZ,CAAC;AAGD,QAAM,oBAAoB,CAAC,OAAO,UAAU;AAC1C,gBAAY,WAAS;AAAA,MACnB,GAAG;AAAA,MACH,CAAC,KAAK,GAAG,MAAM,OAAO;AAAA,IACxB,EAAE;AAAA,EACJ;AACA,SAAO,mDAAC,UACF,6DAAC,SAAI,WAAU,4DACf;AAAA,uDAAC,QAAG,WAAU,2CAA0C,iCAAxD;AAAA;AAAA;AAAA;AAAA,WAAyE;AAAA,IACzE,mDAAC,OAAE,WAAU,gCAA+B,2CAA5C;AAAA;AAAA;AAAA;AAAA,WAAuE;AAAA,IAEvE,mDAAC,UAAK,QAAO,QAAO,WAAU,oCAC5B;AAAA,yDAAC,aAAU,SAAQ,SAAQ,OAAM,SAAQ,OAAO,SAAS,OAAO,UAAU,OAAK,kBAAkB,GAAG,OAAO,KAA3G;AAAA;AAAA;AAAA;AAAA,aAA8G;AAAA,MAC9G,mDAAC,aAAU,SAAQ,YAAW,MAAK,YAAW,OAAM,YAAW,OAAO,SAAS,UAAU,UAAU,OAAK,kBAAkB,GAAG,UAAU,KAAvI;AAAA;AAAA;AAAA;AAAA,aAA0I;AAAA,MAC1I,mDAAC,SAAI,WAAU,sBACb,6DAAC,WAAM,MAAK,UAAS,WAAU,oJAAmJ,OAAM,aAAxL;AAAA;AAAA;AAAA;AAAA,aAAkM,KADpM;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,OAVA;AAAA;AAAA;AAAA;AAAA,SAWF,KAZG;AAAA;AAAA;AAAA;AAAA,SAaH;AACN;AACA,GAAG,OAAO,8BAA8B;AACxC,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
